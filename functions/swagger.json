import json
import sys
import os

# Add the parent directory to the path so we can import our modules
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def handler(event, context):
    """Netlify function handler for Swagger JSON"""
    try:
        # Swagger JSON specification
        swagger_spec = {
            "openapi": "3.0.0",
            "info": {
                "title": "Advanced VRP Solver API",
                "description": "Advanced Vehicle Routing Problem Solver with OR-Tools, Time Windows, and Multi-Objective Optimization",
                "version": "2.0",
                "contact": {
                    "name": "VRP Team",
                    "email": "support@vrp-solver.com"
                }
            },
            "servers": [
                {
                    "url": "https://beautiful-kitten-23ac57.netlify.app",
                    "description": "Production server"
                }
            ],
            "paths": {
                "/api/vrp/solve": {
                    "post": {
                        "summary": "Solve Vehicle Routing Problem",
                        "description": "Solve Vehicle Routing Problem using advanced OR-Tools with time windows and multi-objective optimization",
                        "tags": ["VRP"],
                        "requestBody": {
                            "required": True,
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "vehicles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {"type": "string"},
                                                        "capacity": {"type": "number"},
                                                        "start_location": {
                                                            "type": "object",
                                                            "properties": {
                                                                "lat": {"type": "number"},
                                                                "lng": {"type": "number"}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "locations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {"type": "string"},
                                                        "lat": {"type": "number"},
                                                        "lng": {"type": "number"},
                                                        "demand": {"type": "number"},
                                                        "time_window": {
                                                            "type": "object",
                                                            "properties": {
                                                                "start": {"type": "number"},
                                                                "end": {"type": "number"}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "description": "Successful VRP solution",
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "success": {"type": "boolean"},
                                                "routes": {"type": "array"},
                                                "total_distance": {"type": "number"},
                                                "total_time": {"type": "number"}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "/api/directions": {
                    "post": {
                        "summary": "Get directions from Google Maps API",
                        "description": "Get directions from Google Maps API with vehicle restrictions",
                        "tags": ["Maps"],
                        "requestBody": {
                            "required": True,
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "origin": {
                                                "type": "object",
                                                "properties": {
                                                    "lat": {"type": "number"},
                                                    "lng": {"type": "number"}
                                                }
                                            },
                                            "destination": {
                                                "type": "object",
                                                "properties": {
                                                    "lat": {"type": "number"},
                                                    "lng": {"type": "number"}
                                                }
                                            },
                                            "vehicle_type": {"type": "string"}
                                        }
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "description": "Successful directions response",
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "success": {"type": "boolean"},
                                                "routes": {"type": "array"},
                                                "distance": {"type": "number"},
                                                "duration": {"type": "number"}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
        return {
            'statusCode': 200,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps(swagger_spec)
        }
        
    except Exception as e:
        return {
            'statusCode': 500,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': str(e)})
        }
